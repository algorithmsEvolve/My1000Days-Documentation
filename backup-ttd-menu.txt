import React from "react";
import {
  StyleSheet,
  Text,
  View,
  AsyncStorage,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import { CheckBox } from "react-native-elements";

export default class BumilTTDMenuScreen extends React.Component {
  constructor(props) {
    super(props);
    let today = new Date();
    global.nowDate =
      today.getDate() +
      " - " +
      parseInt(today.getMonth() + 1) +
      " - " +
      today.getFullYear();
    this.state = {
      s1: false,
      s2: false,
      s3: false,
      s4: false,
      s5: false,
      s6: false,
      s7: false,
      s8: false,
      s9: false,
      s10: false,
      s11: false,
      s12: false,
      s13: false,
      s14: false,
      s15: false,
      date1: "",
      date2: "",
      date3: "",
      date4: "",
      date5: "",
      date6: "",
      date7: "",
      date8: "",
      date9: "",
      date10: "",
      date11: "",
      date12: "",
      date13: "",
      date14: "",
      date15: "",
    };
    AsyncStorage.getItem("check")
      .then((value) => {
        const checked = JSON.parse(value);
        if (checked != null) {
        } else {
          const checkList = {
            h1: "false",
            h2: "false",
            h3: "false",
            h4: "false",
            h5: "false",
            h6: "false",
            h7: "false",
            h8: "false",
            h9: "false",
            h10: "false",
            h11: "false",
            h12: "false",
            h13: "false",
            h14: "false",
            h15: "false",
          };
          AsyncStorage.setItem("check", JSON.stringify(checkList));
        }
      })
      .catch((error) => {
        console.log(error);
      });
  }
  makeBoolean = (value) => {
    if (value == "false") {
      var result = false;
    } else if (value == "true") {
      var result = true;
    } else {
      var result = false;
    }
    return result;
  };
  componentDidMount = async () => {
    AsyncStorage.getItem("check")
      .then((value) => {
        const checked = JSON.parse(value);
        this.setState({
          s1: this.makeBoolean(checked.h1),
          s2: this.makeBoolean(checked.h2),
          s3: this.makeBoolean(checked.h3),
          s4: this.makeBoolean(checked.h4),
          s5: this.makeBoolean(checked.h5),
          s6: this.makeBoolean(checked.h6),
          s7: this.makeBoolean(checked.h7),
          s8: this.makeBoolean(checked.h8),
          s9: this.makeBoolean(checked.h9),
          s10: this.makeBoolean(checked.h10),
          s11: this.makeBoolean(checked.h11),
          s12: this.makeBoolean(checked.h12),
          s13: this.makeBoolean(checked.h13),
          s14: this.makeBoolean(checked.h14),
          s15: this.makeBoolean(checked.h15),
          date1: checked.date1,
          date2: checked.date2,
          date3: checked.date3,
          date4: checked.date4,
          date5: checked.date5,
          date6: checked.date6,
          date7: checked.date7,
          date8: checked.date8,
          date9: checked.date9,
          date10: checked.date10,
          date11: checked.date11,
          date12: checked.date12,
          date13: checked.date13,
          date14: checked.date14,
          date15: checked.date15,
        });
      })
      .catch((error) => {
        console.log(error);
      });
  };

  check = (indicator) => {
    switch (indicator) {
      case 1:
        this.setState({
          s1: !this.state.s1,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h1 = this.state.s1.toString();
            if (checked.try1 == null || checked.try1 == 0) {
              this.setState({
                date1: "" + nowDate,
              });
              checked.date1 = this.state.date1;
              checked.try1 = 1;
            } else if (checked.try1 == 1) {
              checked.date1 = "";
              this.setState({
                date1: "",
              });
              checked.try1 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 2:
        this.setState({
          s2: !this.state.s2,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h2 = this.state.s2.toString();
            if (checked.try2 == null || checked.try2 == 0) {
              this.setState({
                date2: "" + nowDate,
              });
              checked.date2 = this.state.date2;
              checked.try2 = 1;
            } else if (checked.try2 == 1) {
              checked.date2 = "";
              this.setState({
                date2: "",
              });
              checked.try2 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 3:
        this.setState({
          s3: !this.state.s3,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h3 = this.state.s3.toString();
            if (checked.try3 == null || checked.try3 == 0) {
              this.setState({
                date3: "" + nowDate,
              });
              checked.date3 = this.state.date3;
              checked.try3 = 1;
            } else if (checked.try3 == 1) {
              checked.date3 = "";
              this.setState({
                date3: "",
              });
              checked.try3 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 4:
        this.setState({
          s4: !this.state.s4,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h4 = this.state.s4.toString();
            if (checked.try4 == null || checked.try4 == 0) {
              this.setState({
                date4: "" + nowDate,
              });
              checked.date4 = this.state.date4;
              checked.try4 = 1;
            } else if (checked.try4 == 1) {
              checked.date4 = "";
              this.setState({
                date4: "",
              });
              checked.try4 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 5:
        this.setState({
          s5: !this.state.s5,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h5 = this.state.s5.toString();
            if (checked.try5 == null || checked.try5 == 0) {
              this.setState({
                date5: "" + nowDate,
              });
              checked.date5 = this.state.date5;
              checked.try5 = 1;
            } else if (checked.try5 == 1) {
              checked.date5 = "";
              this.setState({
                date5: "",
              });
              checked.try5 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 6:
        this.setState({
          s6: !this.state.s6,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h6 = this.state.s6.toString();
            if (checked.try6 == null || checked.try6 == 0) {
              this.setState({
                date6: "" + nowDate,
              });
              checked.date6 = this.state.date6;
              checked.try6 = 1;
            } else if (checked.try6 == 1) {
              checked.date6 = "";
              this.setState({
                date6: "",
              });
              checked.try6 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 7:
        this.setState({
          s7: !this.state.s7,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h7 = this.state.s7.toString();
            if (checked.try7 == null || checked.try7 == 0) {
              this.setState({
                date7: "" + nowDate,
              });
              checked.date7 = this.state.date7;
              checked.try7 = 1;
            } else if (checked.try7 == 1) {
              checked.date7 = "";
              this.setState({
                date7: "",
              });
              checked.try7 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 8:
        this.setState({
          s8: !this.state.s8,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h8 = this.state.s8.toString();
            if (checked.try8 == null || checked.try8 == 0) {
              this.setState({
                date8: "" + nowDate,
              });
              checked.date8 = this.state.date8;
              checked.try8 = 1;
            } else if (checked.try8 == 1) {
              checked.date8 = "";
              this.setState({
                date8: "",
              });
              checked.try8 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 9:
        this.setState({
          s9: !this.state.s9,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h9 = this.state.s9.toString();
            if (checked.try9 == null || checked.try9 == 0) {
              this.setState({
                date9: "" + nowDate,
              });
              checked.date9 = this.state.date9;
              checked.try9 = 1;
            } else if (checked.try9 == 1) {
              checked.date9 = "";
              this.setState({
                date9: "",
              });
              checked.try9 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 10:
        this.setState({
          s10: !this.state.s10,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h10 = this.state.s10.toString();
            if (checked.try10 == null || checked.try10 == 0) {
              this.setState({
                date10: "" + nowDate,
              });
              checked.date10 = this.state.date10;
              checked.try10 = 1;
            } else if (checked.try10 == 1) {
              checked.date10 = "";
              this.setState({
                date10: "",
              });
              checked.try10 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 11:
        this.setState({
          s11: !this.state.s11,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h11 = this.state.s11.toString();
            if (checked.try11 == null || checked.try11 == 0) {
              this.setState({
                date11: "" + nowDate,
              });
              checked.date11 = this.state.date11;
              checked.try11 = 1;
            } else if (checked.try11 == 1) {
              checked.date11 = "";
              this.setState({
                date11: "",
              });
              checked.try11 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 12:
        this.setState({
          s12: !this.state.s12,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h12 = this.state.s12.toString();
            if (checked.try12 == null || checked.try12 == 0) {
              this.setState({
                date12: "" + nowDate,
              });
              checked.date12 = this.state.date12;
              checked.try12 = 1;
            } else if (checked.try12 == 1) {
              checked.date12 = "";
              this.setState({
                date12: "",
              });
              checked.try12 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 13:
        this.setState({
          s13: !this.state.s13,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h13 = this.state.s13.toString();
            if (checked.try13 == null || checked.try13 == 0) {
              this.setState({
                date13: "" + nowDate,
              });
              checked.date13 = this.state.date13;
              checked.try13 = 1;
            } else if (checked.try13 == 1) {
              checked.date13 = "";
              this.setState({
                date13: "",
              });
              checked.try13 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 14:
        this.setState({
          s14: !this.state.s14,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h14 = this.state.s14.toString();
            if (checked.try14 == null || checked.try14 == 0) {
              this.setState({
                date14: "" + nowDate,
              });
              checked.date14 = this.state.date14;
              checked.try14 = 1;
            } else if (checked.try14 == 1) {
              checked.date14 = "";
              this.setState({
                date14: "",
              });
              checked.try14 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      case 15:
        this.setState({
          s15: !this.state.s15,
        });
        AsyncStorage.getItem("check")
          .then((value) => {
            const checked = JSON.parse(value);
            checked.h15 = this.state.s15.toString();
            if (checked.try15 == null || checked.try15 == 0) {
              this.setState({
                date15: "" + nowDate,
              });
              checked.date15 = this.state.date15;
              checked.try15 = 1;
            } else if (checked.try15 == 1) {
              checked.date15 = "";
              this.setState({
                date15: "",
              });
              checked.try15 = 0;
            }
            AsyncStorage.mergeItem("check", JSON.stringify(checked));
          })
          .catch((error) => {
            console.log(error);
          });
        break;
      default:
        this.setState({
          s1: this.state.s1,
        });
    }
  };

  render() {
    return (
      <ScrollView>
        <View style={styles.container}>
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-1</Text>
                <Text style={styles.cbTitleDate}>{this.state.date1}</Text>
              </View>
            }
            checked={this.state.s1}
            checkedColor="pink"
            onPress={() => {
              this.check(1);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-2</Text>
                <Text style={styles.cbTitleDate}>{this.state.date2}</Text>
              </View>
            }
            checked={this.state.s2}
            checkedColor="pink"
            onPress={() => {
              this.check(2);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-3</Text>
                <Text style={styles.cbTitleDate}>{this.state.date3}</Text>
              </View>
            }
            checked={this.state.s3}
            checkedColor="pink"
            onPress={() => {
              this.check(3);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-4</Text>
                <Text style={styles.cbTitleDate}>{this.state.date4}</Text>
              </View>
            }
            checked={this.state.s4}
            checkedColor="pink"
            onPress={() => {
              this.check(4);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-5</Text>
                <Text style={styles.cbTitleDate}>{this.state.date5}</Text>
              </View>
            }
            checked={this.state.s5}
            checkedColor="pink"
            onPress={() => {
              this.check(5);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-6</Text>
                <Text style={styles.cbTitleDate}>{this.state.date6}</Text>
              </View>
            }
            checked={this.state.s6}
            checkedColor="pink"
            onPress={() => {
              this.check(6);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-7</Text>
                <Text style={styles.cbTitleDate}>{this.state.date7}</Text>
              </View>
            }
            checked={this.state.s7}
            checkedColor="pink"
            onPress={() => {
              this.check(7);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-8</Text>
                <Text style={styles.cbTitleDate}>{this.state.date8}</Text>
              </View>
            }
            checked={this.state.s8}
            checkedColor="pink"
            onPress={() => {
              this.check(8);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-9</Text>
                <Text style={styles.cbTitleDate}>{this.state.date9}</Text>
              </View>
            }
            checked={this.state.s9}
            checkedColor="pink"
            onPress={() => {
              this.check(9);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-10</Text>
                <Text style={styles.cbTitleDate}>{this.state.date10}</Text>
              </View>
            }
            checked={this.state.s10}
            checkedColor="pink"
            onPress={() => {
              this.check(10);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-11</Text>
                <Text style={styles.cbTitleDate}>{this.state.date11}</Text>
              </View>
            }
            checked={this.state.s11}
            checkedColor="pink"
            onPress={() => {
              this.check(11);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-12</Text>
                <Text style={styles.cbTitleDate}>{this.state.date12}</Text>
              </View>
            }
            checked={this.state.s12}
            checkedColor="pink"
            onPress={() => {
              this.check(12);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-13</Text>
                <Text style={styles.cbTitleDate}>{this.state.date13}</Text>
              </View>
            }
            checked={this.state.s13}
            checkedColor="pink"
            onPress={() => {
              this.check(13);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-14</Text>
                <Text style={styles.cbTitleDate}>{this.state.date14}</Text>
              </View>
            }
            checked={this.state.s14}
            checkedColor="pink"
            onPress={() => {
              this.check(14);
            }}
          />
          <CheckBox
            title={
              <View>
                <Text style={styles.cbTitle}>Hari ke-15</Text>
                <Text style={styles.cbTitleDate}>{this.state.date15}</Text>
              </View>
            }
            checked={this.state.s15}
            checkedColor="pink"
            onPress={() => {
              this.check(15);
            }}
          />
          <View style={styles.nextPrevView}>
            {/* prev */}
            <TouchableOpacity style={styles.button}>
              <Text style={styles.fontActive}>Prev</Text>
            </TouchableOpacity>

            {/* page button */}
            {/* 1 */}
            <TouchableOpacity style={styles.pageButton}>
              <Text style={styles.fontActive}>1</Text>
            </TouchableOpacity>
            {/* 2 */}
            <TouchableOpacity
              style={styles.pageButton}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu2")}
            >
              <Text style={styles.fontButton}>2</Text>
            </TouchableOpacity>
            {/* 3 */}
            <TouchableOpacity
              style={styles.pageButton}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu3")}
            >
              <Text style={styles.fontButton}>3</Text>
            </TouchableOpacity>
            {/* 4 */}
            <TouchableOpacity
              style={styles.pageButton}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu4")}
            >
              <Text style={styles.fontButton}>4</Text>
            </TouchableOpacity>
            {/* 5 */}
            <TouchableOpacity
              style={styles.pageButton}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu5")}
            >
              <Text style={styles.fontButton}>5</Text>
            </TouchableOpacity>
            {/* 6 */}
            <TouchableOpacity
              style={styles.pageButton}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu6")}
            >
              <Text style={styles.fontButton}>6</Text>
            </TouchableOpacity>
            {/* next */}
            <TouchableOpacity
              style={styles.button}
              onPress={() => this.props.navigation.navigate("BumilTTDMenu2")}
            >
              <Text style={styles.fontButton}>Next</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 10,
    paddingBottom: 22,
  },
  sectionHeader: {
    paddingTop: 2,
    paddingLeft: 10,
    paddingRight: 10,
    paddingBottom: 2,
    fontSize: 14,
    fontWeight: "bold",
    backgroundColor: "rgba(247,247,247,1.0)",
  },
  item: {
    padding: 10,
    fontSize: 18,
    height: 44,
  },
  cbTitle: {
    paddingLeft: 10,
    fontWeight: "bold",
  },
  cbTitleDate: {
    paddingLeft: 10,
    fontWeight: "bold",
    color: "grey",
  },
  nextPrevView: {
    padding: 5,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center",
  },
  pageButton: {
    borderRadius: 5,
    margin: 5,
    padding: 5,
    backgroundColor: "white",
  },
  button: {
    borderRadius: 10,
    margin: 5,
    padding: 5,
    backgroundColor: "white",
  },
  fontActive: {
    fontSize: 17,
    color: "pink",
    fontWeight: "bold",
  },
  fontButton: {
    fontSize: 17,
    color: "black",
  },
});
