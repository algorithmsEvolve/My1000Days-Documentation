import React, { Component } from "react";
import {
  TextInput,
  View,
  Keyboard,
  TouchableOpacity,
  Text,
} from "react-native";
import { Notifications } from "expo";
import * as Permissions from "expo-permissions";
import { Constants } from "expo-constants";

export default class Timer extends Component {
  onSubmit(e) {
    Keyboard.dismiss();

    const localNotification = {
      title: "done",
      body: "done!",
    };

    const schedulingOptions = {
      time: new Date().getTime() + Number(e.nativeEvent.text),
    };

    // Notifications show only when app is not active.
    // (ie. another app being used or device's screen is locked)

    Notifications.scheduleLocalNotificationAsync(
      localNotification,
      schedulingOptions
    );
  }
  handleNotification() {
    // console.warn("ok! got your notif");
  }

  timeToMs = (h, m, s) => {
    let xh = h * 60;
    let xmh = parseFloat(xh + m);
    let Hms = parseFloat(xmh * 60000);
    let xs = s * 1000;
    return parseFloat(xs + Hms);
  };

  sentuh = () => {
    //current time
    let today = new Date();
    let cH = today.getHours();
    let cM = today.getMinutes();
    let cS = today.getSeconds();
    let cJam = this.timeToMs(cH, cM, cS);
    //selected time
    let sH = 21;
    let sM = 18;
    let sS = 0;
    let sJam = this.timeToMs(sH, sM, sS);
    var hasilJam = parseFloat(sJam - cJam);
    console.log(hasilJam);
  };

  async componentDidMount() {
    // We need to ask for Notification permissions for ios devices
    let result = await Permissions.askAsync(Permissions.NOTIFICATIONS);

    if (result.status === "granted") {
      console.log("Notification permissions granted.");
    }
  }

  render() {
    return (
      <View style={{ flex: 1, flexDirection: "row", justifyContent: "center" }}>
        <TextInput onSubmitEditing={this.onSubmit} placeholder={"time in ms"} />
        <TouchableOpacity onPress={() => this.sentuh()}>
          <Text>sentuh</Text>
        </TouchableOpacity>
      </View>
    );
  }
}
